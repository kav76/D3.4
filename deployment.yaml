apiVersion: v1
kind: ConfigMap
metadata:
  name: nginx-config
data:
  nginx.conf: |
    user nginx;
    worker_processes  1;
    events {
      worker_connections  10240;
    }
    http {
      server {
        listen       80;
        server_name  sf-webserver;
        location / {
          auth_basic "Restricted";
          auth_basic_user_file /etc/nginx/auth/nginx-auth;
          root   /usr/share/nginx/html;
          index  index.html index.htm;
        }
      }
    }
---
apiVersion: v1
kind: Secret
metadata:
  name: nginx-auth-secret
type: Opaque
data:
  username: dXNlcjE= # base64 encoded "user1"
  password: cGFzc3dvcmQx # base64 encoded "password1"
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: nginx-sf
spec:
  replicas: 3
  selector:
    matchLabels:
      app: nginx
  template:
    metadata:
      labels:
        app: nginx
    spec:
      containers:
      - name: nginx
        image: nginx:1.21.1-alpine
        ports:
        - containerPort: 80
        volumeMounts:
        - name: nginx-config-volume
          mountPath: /etc/nginx/nginx.conf
          subPath: nginx.conf
        env:
        - name: NGINX_USERNAME
          valueFrom:
            secretKeyRef:
              name: nginx-auth-secret-volume
              key: username
        - name: NGINX_PASSWORD
          valueFrom:
            secretKeyRef:
              name: nginx-auth-secret-volume
              key: password
      volumes:
      - name: nginx-config-volume
        configMap:
          name: nginx-config
---
apiVersion: v1
kind: Service
metadata:
  name: sf-webserver
spec:
  selector:
    app: nginx
  ports:
    - protocol: TCP
      port: 80
      targetPort: 80

